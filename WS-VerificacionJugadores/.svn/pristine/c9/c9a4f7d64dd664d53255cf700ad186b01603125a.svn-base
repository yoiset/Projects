package es.gob.cnjuego.ws.util;

import java.util.Date;

import javax.xml.datatype.DatatypeConstants;

public class FormatoDatosIdentificacion {

	/**
	 * FunciÃ³n que normaliza un nombre, pasÃ¡ndolo a minÃºsculas y eliminando acentuaciÃ³n innecesaria
	 * @param nombre
	 * @return la cadena del nombre en minÃºsculas y sin acentos
	 */
	public static String formateaAcentos(String nombre, String original, String traduccion)
	{
		if (nombre==null)
			return null;
		
		String res = nombre;
		//Se quitan los guiones sustituyÃ©ndolos por espacios en blanco
		res = res.replaceAll("-", " ");
		//eliminar espacios en blanco duplicados
		res = res.replaceAll("\\s+", " ");

		if (nombre != null && nombre.length()>0){
			// Cadena de caracteres original a sustituir.
			//original = "Ã¡Ã Ã¤Ã¢Ã©Ã¨Ã«ÃªÃ­Ã¬Ã¯Ã®Ã³Ã²Ã¶Ã´ÃºÃ¹Ã»Ã?Ã€Ã„Ã‚Ã‰ÃˆÃ‹ÃŠÃ?ÃŒÃ?ÃŽÃ“Ã’Ã–Ã”ÃšÃ™Ã›";
			// Cadena de caracteres ASCII que reemplazarÃ¡n los originales.
			//traduccion = "aaaaeeeeiiiioooouuuAAAAEEEEIIIIOOOOUUU";
			
			for (int i=0; i<original.length(); i++){
				// Reemplazamos los caracteres especiales.
				res = res.replace(original.charAt(i), traduccion.charAt(i));
			}//for i
			res = res.toLowerCase();
		
		}
		return res.trim();
	}
	
	
	/**
	 * FunciÃ³n que formatea una fecha de nacimiento eliminando la zona horaria
	 * @param fecha
	 */
	public static void formateaFechaNacimiento(Date fecha)
	{
//		fecha.setTimezone(DatatypeConstants.FIELD_UNDEFINED);
	}
	
	
	/**
	 * FunciÃ³n que valida que un campo tenga contenido, y no sea una simple cadena de espacios en blanco
	 * @param nombre
	 * @return true si el campo tiene contenido, false si es nulo, o su longitud es 0, 
	 * o si es Ãºnicamente una secuencia de espacios en blanco
	 */
	public static boolean validarCampo(String nombre)
	{
		boolean res = false;
		if (nombre != null && nombre.length()>0 && nombre.trim().length() >0)
			res = true;
			
		return res;
	}
	
	
	
	
	public static boolean validarCaracteres(String nombre, String invalidos)
	{
		boolean res = true;
		for (int i=0; i<invalidos.length(); i++){
			// Reemplazamos los caracteres especiales.
			if (nombre.indexOf(invalidos.charAt(i)) != -1){
				res = false;
				break;
			}
		}
		return res;
	}
	
	
	public static boolean todosCaracteresPermitidos(String nombre, String permitidos)
	{
		boolean res = true;
		for (int i=0; i<nombre.length(); i++){
			// Reemplazamos los caracteres especiales.
			if (permitidos.indexOf(nombre.charAt(i)) == -1){
				res = false;
				break;
			}
		}
		return res;
		
	}
	
	
	
}
