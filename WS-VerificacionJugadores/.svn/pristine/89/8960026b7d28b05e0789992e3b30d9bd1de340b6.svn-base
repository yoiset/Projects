package es.gob.cnjuego.ws.verificacionjugadores;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import org.springframework.transaction.annotation.Transactional;

import es.gob.cnjuego.ws.entity.OperadorEntity;
import es.gob.cnjuego.ws.entity.PeticionEntity;

@Transactional
public class VerificacionDao {
	
	private EntityManager entityManager;
	
	@PersistenceContext
	public void setEntityManager(EntityManager entityManager) {
		this.entityManager = entityManager;
	}

	private EntityManager getEntityManager() {
		return this.entityManager;
	}
	
	/**
	 * Retorna el operador cuyo certificado tiene un hash igual al del parámetro. 
	 */
	public OperadorEntity getOperadorByHash(String hash) {
		Query query = this.getEntityManager().createQuery("SELECT o FROM OperadorEntity o WHERE hashCertificado = :hashCertificado and o.modeEnabled<>0");
		query.setParameter("hashCertificado", hash);
		List<OperadorEntity> lista = query.getResultList();
		if (lista.size() > 0){
			OperadorEntity operador = lista.get(0);
			return operador;
		}
		return null;
	}

	/**
	 * Retorna la petición con el ID del parámetro
	 */
	public PeticionEntity getPeticionesById(int id) {
		PeticionEntity peticion = this.getEntityManager().find(PeticionEntity.class, id);;
		return peticion;
	}

	/**
	 * Guarda la petición en la base de datos.
	 * Nótese que el ID es asignado por la base de datos. 
	 */
	@Transactional
	public PeticionEntity agregarPeticion(PeticionEntity peticion) {
		this.getEntityManager().persist(peticion);
		return peticion;
	}

}
