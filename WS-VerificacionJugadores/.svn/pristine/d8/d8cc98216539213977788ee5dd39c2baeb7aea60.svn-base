package es.gob.cnjuego.ws.util;

import java.util.HashMap;
import java.util.List;

import es.gob.cnjuego.ws.entity.Configuracion;
import es.gob.cnjuego.ws.entity.TraduccionCaracteres;
import es.gob.cnjuego.ws.service.ServicioConfiguracion;
import es.gob.cnjuego.ws.service.ServicioTraduccionCaracteres;

/** Singlento para controlar listas como TRaduccion de Caracteres, Configuracion etc
 * @author ylopezconnectis
 *
 */
public class UtilSupport {
	
	private static UtilSupport _instance;
	
	private static HashMap<String, String> mapTraduccion;
	private static HashMap<String, String> mapConfiguracion;
	
	
	
	
	/**
	 * 
	 */
	private UtilSupport() {
		super();
		this.mapTraduccion = new HashMap<>();
		this.mapConfiguracion=new HashMap<>();
		initTraduccionCaracteres();
		initConfiguracion();
	}

	/**
	 * @return
	 */
	public static UtilSupport getIntance(){
		if(_instance==null) _instance=new UtilSupport();
		return _instance;
	}
	
	/**
	 * Metodo que inicializa el hashmap con la traduccion de caracteres
	 */
	private void initTraduccionCaracteres(){
		List<TraduccionCaracteres> list= getTraduccionCaracteres();
		String original = "";
		String traduccion="";
		//String original = "ÃƒÂ¡ÃƒÂ ÃƒÂ¤ÃƒÂ¢Ãƒï¿½Ãƒâ‚¬Ãƒâ€žÃƒâ€šÃƒÂ©ÃƒÂ¨ÃƒÂ«ÃƒÂªÃƒâ€°ÃƒË†Ãƒâ€¹ÃƒÅ ÃƒÂ­ÃƒÂ¬ÃƒÂ¯ÃƒÂ®Ãƒï¿½ÃƒÅ’ÃƒÅ½Ãƒï¿½ÃƒÂ³ÃƒÂ²ÃƒÂ¶ÃƒÂ´Ãƒâ€œÃƒâ€™Ãƒâ€“Ãƒâ€�ÃƒÂºÃƒÂ¹ÃƒÂ»ÃƒÅ¡Ãƒâ„¢Ãƒâ€º";
		//String traduccion="aaaaaaaaeeeeeeeeiiiiiiiioooooooouuuuuu";

		int i=0;
		for (TraduccionCaracteres trad: list ){
			original = original + trad.getOriginal();
			traduccion = traduccion + trad.getTraduccion();
			i++;
		}
		mapTraduccion.put(Constantes.CACHE_KEY_CARACTERES_ORIGINAL, original);
		mapTraduccion.put(Constantes.CACHE_KEY_CARACTERES_TRADUCCION, traduccion);
	}
	
	
	/**
	 * 
	 */
	private void initConfiguracion(){
		List<Configuracion> list= getListaConfiguracion();
		for (Configuracion conf : list) {
			mapConfiguracion.put(conf.getClave(), conf.getValor());
		}
		
	}
	
	/**
	 * @return
	 */
	private static List<TraduccionCaracteres> getTraduccionCaracteres(){
		ServicioTraduccionCaracteres srvTraduccion= ServiceCN.getServicioTraduccionCaracteres();
		if(srvTraduccion==null) return null;
		return srvTraduccion.leerTraduccion();
	}
	
	private static List<Configuracion> getListaConfiguracion(){
		ServicioConfiguracion servicio=ServiceCN.getServicioConfiguracion();
		if(servicio==null) return null;
		return servicio.leer();
	}
	
	
	
	/**
	 * @param tipoCaracteres
	 * @return
	 * @throws Exception
	 */
	public static String getCaracteresCache(String tipoCaracteres)throws Exception
	{
		return  mapTraduccion.get(tipoCaracteres);
	}
	
	
	/** Obtiene el valor de configuración establecido en BD
	 * @param conf
	 * @return
	 */
	public static String getConfigiracion(String conf){
		return mapConfiguracion.get(conf);
	}
	

}
