package es.gob.cnjuego.ws.verificacionjugadores;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import es.mir.juego.component.ws.service.InfoResultado;
import es.mir.juego.component.ws.service.JuegoDni;
import es.mir.juego.component.ws.service.ListaDniRequest;
import es.mir.juego.component.ws.service.ListaDniResponse;


/**
 * Esta clase actúa como intermediario para efectuar las consultas de verificación de usuarios 
 * en el RGIAJ.
 * Este cliente invoca al servicio JuegoDni que corre dentro de la DGOJ y que a su vez invoca
 * al servicio SVDI remoto.
 */
public class ClienteJuegoDniService {

	static Logger log = Logger.getLogger(ClienteJuegoDniService.class);

	private JuegoDni clienteJuegoDni;

	public ArrayList<ResultadoRGIAJ> verificarJuegoDni(List<String> listaDni) throws Exception {
		try {
			ListaDniRequest listaDniReq = new ListaDniRequest();
			listaDniReq.getDni().addAll(listaDni);
			ListaDniResponse listaDniRes = this.getClienteJuegoDni().listaDni(listaDniReq);

			
			ArrayList<ResultadoRGIAJ> estado = comprobarRespuesta(listaDniRes);
			return estado;
		} catch (Exception ex) {
			log.error("AccesoSCSP.verificarIdentidad():No se ha podido verificar la identidad del usuario",	ex);
			throw ex;
		}
	}

	
	/**
	 * Se procesa la respuesta enviada por JuegoDni y se retorna una lista de resultados de jugadores 
	 * que incluyen un DNI y un código y descripción que indican si está inscrito o no en el RGIAJ
	 */
	private ArrayList<ResultadoRGIAJ> comprobarRespuesta(ListaDniResponse listaDniRes) {
		ArrayList<ResultadoRGIAJ> listaResultados = new ArrayList<ResultadoRGIAJ>();
		
		for (InfoResultado unResultado : listaDniRes.getInforesultado()){
			ResultadoRGIAJ nuevoResultado = new ResultadoRGIAJ();
			ResultadoType rt = new ResultadoType();
			
			nuevoResultado.setDni(unResultado.getDni());
			if (unResultado.isResultado()) {
				rt.setCodigo(CodigosVerificacion.COD_INSCRITO_RGIAJ);
				rt.setDescripcion(CodigosVerificacion.getDescripcion(CodigosVerificacion.COD_INSCRITO_RGIAJ));
				nuevoResultado.setResultadoRGIAJ(rt);
			} else {
				rt.setCodigo(CodigosVerificacion.COD_NO_INSCRITO_RGIAJ);
				rt.setDescripcion(CodigosVerificacion.getDescripcion(CodigosVerificacion.COD_NO_INSCRITO_RGIAJ));
				nuevoResultado.setResultadoRGIAJ(rt);
			}
			
			listaResultados.add(nuevoResultado);
		}
		
		return listaResultados;
	}


	public JuegoDni getClienteJuegoDni() {
		return clienteJuegoDni;
	}


	public void setClienteJuegoDni(JuegoDni clienteJuegoDni) {
		this.clienteJuegoDni = clienteJuegoDni;
	}



	

}
